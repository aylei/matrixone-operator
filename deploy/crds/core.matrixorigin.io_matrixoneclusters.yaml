---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: matrixoneclusters.core.matrixorigin.io
spec:
  group: core.matrixorigin.io
  names:
    kind: MatrixOneCluster
    listKind: MatrixOneClusterList
    plural: matrixoneclusters
    shortNames:
    - mo
    singular: matrixonecluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.logService.replicas
      name: Log
      type: integer
    - jsonPath: .spec.dn.replicas
      name: DN
      type: integer
    - jsonPath: .spec.tp.replicas
      name: TP
      type: integer
    - jsonPath: .spec.ap.replicas
      name: AP
      type: integer
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A MatrixOneCluster is a resource that represents a MatrixOne
          Cluster
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MatrixOneClusterSpec defines the desired state of MatrixOneCluster
              Note that MatrixOneCluster does not support specify overlay for underlying
              sets directly due to the size limitation of kubernetes apiserver
            properties:
              cn:
                description: TP is the default CN pod set that accepts client connections
                  and execute queries
                properties:
                  apAvailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: TPAvailable maximum ap set is available kubebuilder:default=0
                    x-kubernetes-int-or-string: true
                  cacheVolume:
                    description: CacheVolume is the desired local cache volume for
                      CNSet, node storage will be used if not specified
                    properties:
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Size is the desired storage size of the volume
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      storageClassName:
                        description: StorageClassName reference to the storageclass
                          of the desired volume, the default storageclass of the cluster
                          would be used if no specified.
                        type: string
                    required:
                    - size
                    type: object
                  config:
                    description: Config is the raw config for pods
                    type: string
                  configmap:
                    description: ConfigMap is reference to a key in a config map
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must
                          be defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  image:
                    description: Image is the docker image of the main container
                    type: string
                  lifecycle:
                    description: Lifecycle defines the lifecycle hooks for Pods pre-delete,
                      in-place update.
                    properties:
                      inPlaceUpdate:
                        description: InPlaceUpdate is the hook before Pod to update
                          and after Pod has been updated.
                        properties:
                          finalizersHandler:
                            items:
                              type: string
                            type: array
                          labelsHandler:
                            additionalProperties:
                              type: string
                            type: object
                          markPodNotReady:
                            description: 'MarkPodNotReady = true means: - Pod will
                              be set to ''NotReady'' at preparingDelete/preparingUpdate
                              state. - Pod will be restored to ''Ready'' at Updated
                              state if it was set to ''NotReady'' at preparingUpdate
                              state. Default to false.'
                            type: boolean
                        type: object
                      preDelete:
                        description: PreDelete is the hook before Pod to be deleted.
                        properties:
                          finalizersHandler:
                            items:
                              type: string
                            type: array
                          labelsHandler:
                            additionalProperties:
                              type: string
                            type: object
                          markPodNotReady:
                            description: 'MarkPodNotReady = true means: - Pod will
                              be set to ''NotReady'' at preparingDelete/preparingUpdate
                              state. - Pod will be restored to ''Ready'' at Updated
                              state if it was set to ''NotReady'' at preparingUpdate
                              state. Default to false.'
                            type: boolean
                        type: object
                    type: object
                  minReadySeconds:
                    description: Minimum number of seconds for which a newly created
                      pod should be ready without any of its container crashing, for
                      it to be considered available. Defaults to 0 (pod will be considered
                      available as soon as it is ready)
                    format: int32
                    type: integer
                  nodeSelector:
                    additionalProperties:
                      type: string
                    type: object
                  replicas:
                    description: Replicas is the desired number of pods of this set
                    format: int32
                    type: integer
                  resources:
                    description: Resources is the resource requirement of the main
                      conainer
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  revisionHistoryLimit:
                    description: RevisionHistoryLimit is the maximum number of revisions
                      that will be maintained in the CloneSet's revision history.
                      The revision history consists of all revisions not represented
                      by a currently applied CloneSetSpec version. The default value
                      is 10.
                    format: int32
                    type: integer
                  scaleStrategy:
                    description: ScaleStrategy clone set scalestrategy config for
                      cn service
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 25%
                        description: 'The maximum number of pods that can be unavailable
                          during the update. Value can be an absolute number (ex:
                          5) or a percentage of desired pods (ex: 10%). Absolute number
                          is calculated from percentage by rounding down. Defaults
                          to 25%.'
                        x-kubernetes-int-or-string: true
                      podsToDelete:
                        description: PodsToDelete is the names of Pod should be deleted.
                          Note that this list will be truncated for non-existing pod
                          names.
                        items:
                          type: string
                        type: array
                    type: object
                  serviceType:
                    default: ClusterIP
                    description: ServiceType is the service type of cn service
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                  topologySpread:
                    description: This will overridden by .overlay.TopologySpreadConstraints
                    items:
                      type: string
                    type: array
                  updateStrategy:
                    description: Updatestrategy clone set updatestrategy config for
                      cn service
                    properties:
                      inPlaceUpdateStrategy:
                        description: InPlaceUpdateStrategy contains strategies for
                          in-place update.
                        properties:
                          gracePeriodSeconds:
                            description: GracePeriodSeconds is the timespan between
                              set Pod status to not-ready and update images in Pod
                              spec when in-place update a Pod.
                            format: int32
                            type: integer
                        type: object
                      maxSurge:
                        anyOf:
                        - type: integer
                        - type: string
                        default: "0"
                        description: 'The maximum number of pods that can be scheduled
                          above the desired replicas during update or specified delete.
                          Value can be an absolute number (ex: 5) or a percentage
                          of desired pods (ex: 10%). Absolute number is calculated
                          from percentage by rounding up. Defaults to 0.'
                        x-kubernetes-int-or-string: true
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 20%
                        description: 'The maximum number of pods that can be unavailable
                          during update or scale. Value can be an absolute number
                          (ex: 5) or a percentage of desired pods (ex: 10%). Absolute
                          number is calculated from percentage by rounding up by default.
                          When maxSurge > 0, absolute number is calculated from percentage
                          by rounding down. Defaults to 20%.'
                        x-kubernetes-int-or-string: true
                      partition:
                        anyOf:
                        - type: integer
                        - type: string
                        default: "0"
                        description: 'Partition is the desired number of pods in old
                          revisions. Value can be an absolute number (ex: 5) or a
                          percentage of desired pods (ex: 10%). Absolute number is
                          calculated from percentage by rounding up by default. It
                          means when partition is set during pods updating, (replicas
                          - partition value) number of pods will be updated. Default
                          value is 0.'
                        x-kubernetes-int-or-string: true
                      paused:
                        default: false
                        description: Paused indicates that the CloneSet is paused.
                          Default value is false
                        type: boolean
                      priorityStrategy:
                        description: Priorities are the rules for calculating the
                          priority of updating pods. Each pod to be updated, will
                          pass through these terms and get a sum of weights.
                        properties:
                          orderPriority:
                            description: 'Order priority terms, pods will be sorted
                              by the value of orderedKey. For example: ``` orderPriority:
                              - orderedKey: key1 - orderedKey: key2 ``` First, all
                              pods which have key1 in labels will be sorted by the
                              value of key1. Then, the left pods which have no key1
                              but have key2 in labels will be sorted by the value
                              of key2 and put behind those pods have key1.'
                            items:
                              description: UpdatePriorityOrder defines order priority.
                              properties:
                                orderedKey:
                                  description: Calculate priority by value of this
                                    key. Values of this key, will be sorted by GetInt(val).
                                    GetInt method will find the last int in value,
                                    such as getting 5 in value '5', getting 10 in
                                    value 'sts-10'.
                                  type: string
                              required:
                              - orderedKey
                              type: object
                            type: array
                          weightPriority:
                            description: Weight priority terms, pods will be sorted
                              by the sum of all terms weight.
                            items:
                              description: UpdatePriorityWeightTerm defines weight
                                priority.
                              properties:
                                matchSelector:
                                  description: MatchSelector is used to select by
                                    pod's labels.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding matchExpressions, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - matchSelector
                              - weight
                              type: object
                            type: array
                        type: object
                      scatterStrategy:
                        description: ScatterStrategy defines the scatter rules to
                          make pods been scattered when update. This will avoid pods
                          with the same key-value to be updated in one batch. - Note
                          that pods will be scattered after priority sort. So, although
                          priority strategy and scatter strategy can be applied together,
                          we suggest to use either one of them. - If scatterStrategy
                          is used, we suggest to just use one term. Otherwise, the
                          update order can be hard to understand.
                        items:
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        type: array
                      type:
                        default: ReCreate
                        description: Type indicates the type of the CloneSetUpdateStrategy.
                          Default is ReCreate.
                        type: string
                    type: object
                required:
                - replicas
                type: object
              dn:
                description: DN is the default DN pod set of this Cluster
                properties:
                  cacheVolume:
                    description: CacheVolume is the desired local cache volume for
                      DNSet, node storage will be used if not specified
                    properties:
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Size is the desired storage size of the volume
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      storageClassName:
                        description: StorageClassName reference to the storageclass
                          of the desired volume, the default storageclass of the cluster
                          would be used if no specified.
                        type: string
                    required:
                    - size
                    type: object
                  config:
                    description: Config is the raw config for pods
                    type: string
                  format:
                    default: json
                    description: 'Format log format method: json, console'
                    type: string
                  image:
                    description: Image is the docker image of the main container
                    type: string
                  initialConfig:
                    properties:
                      storageBackend:
                        type: string
                    type: object
                  level:
                    default: info
                    description: 'Level log level: debug,info,warning'
                    type: string
                  lifecycle:
                    description: Lifecycle defines the lifecycle hooks for Pods pre-delete,
                      in-place update.
                    properties:
                      inPlaceUpdate:
                        description: InPlaceUpdate is the hook before Pod to update
                          and after Pod has been updated.
                        properties:
                          finalizersHandler:
                            items:
                              type: string
                            type: array
                          labelsHandler:
                            additionalProperties:
                              type: string
                            type: object
                          markPodNotReady:
                            description: 'MarkPodNotReady = true means: - Pod will
                              be set to ''NotReady'' at preparingDelete/preparingUpdate
                              state. - Pod will be restored to ''Ready'' at Updated
                              state if it was set to ''NotReady'' at preparingUpdate
                              state. Default to false.'
                            type: boolean
                        type: object
                      preDelete:
                        description: PreDelete is the hook before Pod to be deleted.
                        properties:
                          finalizersHandler:
                            items:
                              type: string
                            type: array
                          labelsHandler:
                            additionalProperties:
                              type: string
                            type: object
                          markPodNotReady:
                            description: 'MarkPodNotReady = true means: - Pod will
                              be set to ''NotReady'' at preparingDelete/preparingUpdate
                              state. - Pod will be restored to ''Ready'' at Updated
                              state if it was set to ''NotReady'' at preparingUpdate
                              state. Default to false.'
                            type: boolean
                        type: object
                    type: object
                  maxSize:
                    default: 512
                    description: MaxSize log file max size
                    type: integer
                  minReadySeconds:
                    description: Minimum number of seconds for which a newly created
                      pod should be ready without any of its container crashing, for
                      it to be considered available. Defaults to 0 (pod will be considered
                      available as soon as it is ready)
                    format: int32
                    type: integer
                  nodeSelector:
                    additionalProperties:
                      type: string
                    type: object
                  replicas:
                    description: Replicas is the desired number of pods of this set
                    format: int32
                    type: integer
                  resources:
                    description: Resources is the resource requirement of the main
                      conainer
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  revisionHistoryLimit:
                    description: RevisionHistoryLimit is the maximum number of revisions
                      that will be maintained in the CloneSet's revision history.
                      The revision history consists of all revisions not represented
                      by a currently applied CloneSetSpec version. The default value
                      is 10.
                    format: int32
                    type: integer
                  scaleStrategy:
                    description: ScaleStrategy clone set scalestrategy config for
                      dn service
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 25%
                        description: 'The maximum number of pods that can be unavailable
                          during the update. Value can be an absolute number (ex:
                          5) or a percentage of desired pods (ex: 10%). Absolute number
                          is calculated from percentage by rounding down. Defaults
                          to 25%.'
                        x-kubernetes-int-or-string: true
                      podsToDelete:
                        description: PodsToDelete is the names of Pod should be deleted.
                          Note that this list will be truncated for non-existing pod
                          names.
                        items:
                          type: string
                        type: array
                    type: object
                  serviceType:
                    default: ClusterIP
                    description: ServiceType is the service type of dn service
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                  topologySpread:
                    description: This will overridden by .overlay.TopologySpreadConstraints
                    items:
                      type: string
                    type: array
                  updateStrategy:
                    description: Updatestrategy clone set updatestrategy config for
                      dn service
                    properties:
                      inPlaceUpdateStrategy:
                        description: InPlaceUpdateStrategy contains strategies for
                          in-place update.
                        properties:
                          gracePeriodSeconds:
                            description: GracePeriodSeconds is the timespan between
                              set Pod status to not-ready and update images in Pod
                              spec when in-place update a Pod.
                            format: int32
                            type: integer
                        type: object
                      maxSurge:
                        anyOf:
                        - type: integer
                        - type: string
                        default: "0"
                        description: 'The maximum number of pods that can be scheduled
                          above the desired replicas during update or specified delete.
                          Value can be an absolute number (ex: 5) or a percentage
                          of desired pods (ex: 10%). Absolute number is calculated
                          from percentage by rounding up. Defaults to 0.'
                        x-kubernetes-int-or-string: true
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 20%
                        description: 'The maximum number of pods that can be unavailable
                          during update or scale. Value can be an absolute number
                          (ex: 5) or a percentage of desired pods (ex: 10%). Absolute
                          number is calculated from percentage by rounding up by default.
                          When maxSurge > 0, absolute number is calculated from percentage
                          by rounding down. Defaults to 20%.'
                        x-kubernetes-int-or-string: true
                      partition:
                        anyOf:
                        - type: integer
                        - type: string
                        default: "0"
                        description: 'Partition is the desired number of pods in old
                          revisions. Value can be an absolute number (ex: 5) or a
                          percentage of desired pods (ex: 10%). Absolute number is
                          calculated from percentage by rounding up by default. It
                          means when partition is set during pods updating, (replicas
                          - partition value) number of pods will be updated. Default
                          value is 0.'
                        x-kubernetes-int-or-string: true
                      paused:
                        default: false
                        description: Paused indicates that the CloneSet is paused.
                          Default value is false
                        type: boolean
                      priorityStrategy:
                        description: Priorities are the rules for calculating the
                          priority of updating pods. Each pod to be updated, will
                          pass through these terms and get a sum of weights.
                        properties:
                          orderPriority:
                            description: 'Order priority terms, pods will be sorted
                              by the value of orderedKey. For example: ``` orderPriority:
                              - orderedKey: key1 - orderedKey: key2 ``` First, all
                              pods which have key1 in labels will be sorted by the
                              value of key1. Then, the left pods which have no key1
                              but have key2 in labels will be sorted by the value
                              of key2 and put behind those pods have key1.'
                            items:
                              description: UpdatePriorityOrder defines order priority.
                              properties:
                                orderedKey:
                                  description: Calculate priority by value of this
                                    key. Values of this key, will be sorted by GetInt(val).
                                    GetInt method will find the last int in value,
                                    such as getting 5 in value '5', getting 10 in
                                    value 'sts-10'.
                                  type: string
                              required:
                              - orderedKey
                              type: object
                            type: array
                          weightPriority:
                            description: Weight priority terms, pods will be sorted
                              by the sum of all terms weight.
                            items:
                              description: UpdatePriorityWeightTerm defines weight
                                priority.
                              properties:
                                matchSelector:
                                  description: MatchSelector is used to select by
                                    pod's labels.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding matchExpressions, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - matchSelector
                              - weight
                              type: object
                            type: array
                        type: object
                      scatterStrategy:
                        description: ScatterStrategy defines the scatter rules to
                          make pods been scattered when update. This will avoid pods
                          with the same key-value to be updated in one batch. - Note
                          that pods will be scattered after priority sort. So, although
                          priority strategy and scatter strategy can be applied together,
                          we suggest to use either one of them. - If scatterStrategy
                          is used, we suggest to just use one term. Otherwise, the
                          update order can be hard to understand.
                        items:
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        type: array
                      type:
                        default: ReCreate
                        description: Type indicates the type of the CloneSetUpdateStrategy.
                          Default is ReCreate.
                        type: string
                    type: object
                required:
                - replicas
                type: object
              imageRepository:
                description: ImageRepository allows user to override the default image
                  repository in order to use a docker registry proxy or private registry.
                type: string
              logService:
                description: LogService is the default LogService pod set of this
                  cluster
                properties:
                  config:
                    description: Config is the raw config for pods
                    type: string
                  image:
                    description: Image is the docker image of the main container
                    type: string
                  initialConfig:
                    description: InitialConfig is the initial configuration of HAKeeper
                      InitialConfig is immutable
                    properties:
                      dnShards:
                        description: DNShards is the initial number of DN shards,
                          cannot be tuned after cluster creation currently. default
                          to 1
                        type: integer
                      haKeeperReplicas:
                        description: HAKeeperReplicas is the initial number of HAKeeper
                          replicas, cannot be tuned after cluster creation currently.
                          default to 3 if LogSet replicas >= 3, to 1 otherwise
                        type: integer
                      logShardReplicas:
                        description: LogShardReplicas is the replica numbers of each
                          log shard, cannot be tuned after cluster creation currently.
                          default to 3 if LogSet replicas >= 3, to 1 otherwise
                        type: integer
                      logShards:
                        description: LogShards is the initial number of log shards,
                          cannot be tuned after cluster creation currently. default
                          to 1
                        type: integer
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    type: object
                  replicas:
                    description: Replicas is the desired number of pods of this set
                    format: int32
                    type: integer
                  resources:
                    description: Resources is the resource requirement of the main
                      conainer
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  sharedStorage:
                    description: SharedStorage is an external shared storage shared
                      by all LogService instances
                    properties:
                      s3:
                        description: S3 specifies an S3 bucket as the shared storage
                          provider, mutual-exclusive with other providers.
                        properties:
                          endpoint:
                            description: Endpoint is the endpoint of the S3 compatible
                              service default to aws S3 well known endpoint
                            type: string
                          path:
                            description: Path is the s3 storage path in <bucket-name>/<folder>
                              format, e.g. "my-bucket/my-folder"
                            type: string
                          region:
                            description: Region of the S3 bucket the default region
                              will be inferred from the deployment environment
                            type: string
                          secretRef:
                            description: Credentials for s3, the client will automatically
                              discover credential sources from the environment if
                              not specified
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - path
                        type: object
                    type: object
                  topologySpread:
                    description: This will overridden by .overlay.TopologySpreadConstraints
                    items:
                      type: string
                    type: array
                  volume:
                    description: Volume is the local persistent volume for each LogService
                      instance
                    properties:
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Size is the desired storage size of the volume
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      storageClassName:
                        description: StorageClassName reference to the storageclass
                          of the desired volume, the default storageclass of the cluster
                          would be used if no specified.
                        type: string
                    required:
                    - size
                    type: object
                required:
                - replicas
                - sharedStorage
                - volume
                type: object
              version:
                description: Version is the version of the cluster, which translated
                  to the docker image tag used for each component. default to the
                  recommended version of the operator
                type: string
              webUIEnabled:
                description: WebUIEnabled indicates whether deploy the MO web-ui,
                  default to true.
                type: boolean
            required:
            - cn
            - dn
            - version
            type: object
          status:
            description: MatrixOneClusterStatus defines the observed state of MatrixOneCluster
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dn:
                description: DN is the DN set status
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource. --- This struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example, type FooStatus struct{ // Represents the observations
                        of a foo's current state. // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                        // +patchStrategy=merge // +listType=map // +listMapKey=type
                        Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                        \n // other fields }"
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                type: object
              logService:
                description: LogService is the LogService status
                properties:
                  availableStores:
                    items:
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the latest timestamp
                            a state transition occurs
                          format: date-time
                          type: string
                        phase:
                          type: string
                        podName:
                          type: string
                      type: object
                    type: array
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource. --- This struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example, type FooStatus struct{ // Represents the observations
                        of a foo's current state. // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                        // +patchStrategy=merge // +listType=map // +listMapKey=type
                        Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                        \n // other fields }"
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  discovery:
                    properties:
                      address:
                        type: string
                      port:
                        format: int32
                        type: integer
                    type: object
                  failedStores:
                    items:
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the latest timestamp
                            a state transition occurs
                          format: date-time
                          type: string
                        phase:
                          type: string
                        podName:
                          type: string
                      type: object
                    type: array
                type: object
              tp:
                description: CN is the CN set status
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource. --- This struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example, type FooStatus struct{ // Represents the observations
                        of a foo's current state. // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                        // +patchStrategy=merge // +listType=map // +listMapKey=type
                        Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                        \n // other fields }"
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
